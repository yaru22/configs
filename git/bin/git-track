#!/bin/bash

#
# git-track: Track a remote repository and apply patches incrementally.
#
# Installation:
#
#   1) Place this script in one of the folders present in your PATH variable.
#   2) Rename this script to `git-track`
#   3) Turn this script into an executable file: chmod u+x git-track
#
# Usage:
#
#   1) Add remote: git remote add seed https://github.com/<id>/<repo>.git
#   2) Initialize: git track seed/master
#   3) Merge: git track
#

LOCAL_BRANCH="master"
TRACK_BRANCH="track"
TRACKFILE=".gittrack"

git fetch --all

# Ensure specified remote branch actually exists
if [ ! -z "$1" ]; then
  IFS='/' read remote branch <<< $1

  if [ `git ls-remote $remote | cut -f2 -d$'\t' | grep -sw "refs/heads/$branch"` ]; then
    echo "Error: The remote branch \"$1\" does not exist."
    echo
    echo "Run:"
    echo "  git remote add $remote <url>"
    exit 1
  fi

  # Create branch
  git checkout -b $TRACK_BRANCH $1
  git checkout $LOCAL_BRANCH
fi

# Ensure the track branch is already initialized.
branch_exists=`git show-ref refs/heads/$TRACK_BRANCH`
if [ -z "$1" ] && [ ! -n "$branch_exists" ]; then
  echo "Error: Track branch is not yet initialized."
  echo
  echo "Run:"
  echo "  git track <remote>/<branch>"
  exit 2
fi

# Pull updates
git checkout $TRACK_BRANCH
git pull
git checkout $LOCAL_BRANCH

# Save the last commit hash in the trackfile.
touch $TRACKFILE
prev_track=`cat $TRACKFILE`
last_commit_hash=`git rev-parse $TRACK_BRANCH`

if [ "$prev_track" != "$last_commit_hash" ]; then
  # Create patch and apply
  git diff --binary ${prev_track}..${TRACK_BRANCH} | git apply -3
fi

echo $last_commit_hash > $TRACKFILE
git add $TRACKFILE
